"""allow nullable columns

Revision ID: 9a56ba9c0e75
Revises: ef50fe6af3e0
Create Date: 2025-04-18 23:56:47.043274

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9a56ba9c0e75'
down_revision: Union[str, None] = 'ef50fe6af3e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Using batch alter table since its an sqlite db
    with op.batch_alter_table('appointments') as batch_op:
        batch_op.alter_column('deleted_at',
                   existing_type=sa.DATETIME(),
                   nullable=True)
        batch_op.alter_column('is_deleted',
                   existing_type=sa.BOOLEAN(),
                   nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('appointments') as batch_op:
        batch_op.alter_column('is_deleted',
                   existing_type=sa.BOOLEAN(),
                   nullable=False)
        batch_op.alter_column('deleted_at',
                   existing_type=sa.DATETIME(),
                   nullable=False)
    # ### end Alembic commands ###
